[Default]

Version = 1
;; Used incase there is ever a breaking change, or to inform user in log about a new feature.

Strip Chars = ";[]"
;; List of characters to strip out
Strip Chars Mode = 0
;; 0 = Strip Bad Chars, 1 = Strip + Log Bad Chars, 2 = Return Error & Log Bad Chars
;;     Note: Logging on works when sending data to database.


; --------------------------------------------------------------------------------
; SQL Statements https://bitbucket.org/torndeco/extdb3/wiki/extDB3%20-%20sql_custom.ini
; --------------------------------------------------------------------------------

; ------------------------------------------
; Core SQL
; ------------------------------------------

[exists_player]
SQL1_1 = SELECT CASE WHEN EXISTS(SELECT * FROM core_users WHERE uid=?) THEN 'true' ELSE 'false' END;
SQL1_INPUTS = 1
OUTPUT = 1

[exists_profile]
SQL1_1 = SELECT CASE WHEN EXISTS(SELECT * FROM core_profiles WHERE first_name=? AND last_name=?) THEN 'true' ELSE 'false' END;
SQL1_INPUTS = 1, 2
OUTPUT = 1

[core_get_user]
SQL1_1 = SELECT id, subscriber FROM core_users WHERE uid=?;
SQL1_INPUTS = 1
OUTPUT = 1

[core_get_profiles]
SQL1_1 = SELECT id, player_id, profile_uid, first_name, last_name, female, cash, items, clothes, weapons, hunger, thirst, position FROM core_profiles WHERE player_id=?;
SQL1_INPUTS = 1
OUTPUT = 1, 2, 3-String, 4-String, 5-String, 6, 7, 8, 9, 10, 11, 12, 13

[core_insert_user]
SQL1_1 = INSERT INTO core_users (uid) VALUES (?);
SQL1_INPUTS = 1

[core_insert_profile]
SQL1_1 = INSERT INTO core_profiles (player_id, profile_uid, first_name, last_name, female) VALUES (?,?,?,?,?);
SQL1_INPUTS = 1, 2, 3, 4, 5

[core_profile_reset]
SQL1_1 = UPDATE core_profiles SET connected=0

[core_profile_reset_profile]
SQL1_1 = UPDATE core_profiles SET connected=0 WHERE player_id=?
SQL1_INPUTS = 1

[core_profile_set_connected]
SQL1_1 = UPDATE core_profiles SET connected=1 WHERE id=?
SQL1_INPUTS = 1

; ------------------------------------------
; Core Money
; ------------------------------------------
[core_cash_add]
SQL1_1 = UPDATE core_profiles SET cash=cash+? WHERE id=?
SQL1_INPUTS = 2, 1
SQL2_1 = SELECT cash FROM core_profiles WHERE id=?
SQL2_INPUTS = 1
OUTPUT = 1

[core_cash_remove]
SQL1_1 = UPDATE core_profiles SET cash=cash-? WHERE id=?
SQL1_INPUTS = 2, 1
SQL2_1 = SELECT cash FROM core_profiles WHERE id=?
SQL2_INPUTS = 1
OUTPUT = 1

; ------------------------------------------
; Core Garage
; ------------------------------------------
[core_garage_get_profile]
SQL1_1 = SELECT g.id, g.profile_id, g.faction_id, g.vehicle_id, v.class_name, g.vin, g.plate, g.status, g.hit, g.damage, g.fuel, g.color, g.material, g.rims, g.windows, g.lights FROM core_garage g INNER JOIN core_vehicles v ON v.id=g.vehicle_id WHERE g.profile_id=? AND g.stealer_id=0 AND g.status=0;
SQL1_INPUTS = 1
OUTPUT = 1, 2, 3-Null, 4, 5-String, 6-String, 7-String, 8, 9, 10, 11, 12-String, 13-String, 14-String, 15, 16

[core_garage_get_faction]
SQL1_1 = SELECT g.id, g.profile_id, g.faction_id, g.vehicle_id, v.class_name, g.vin, g.plate, g.status, g.hit, g.damage, g.fuel, g.color, g.material, g.rims, g.windows, g.lights FROM core_garage g INNER JOIN core_vehicles v ON v.id=g.vehicle_id WHERE g.faction_id=? AND (g.profile_id=? OR g.profile_id=NULL) AND g.stealer_id=0 AND g.status=0;
SQL1_INPUTS = 2, 1
OUTPUT = 1, 2-Null, 3, 4, 5-String, 6-String, 7-String, 8, 9, 10, 11, 12-String, 13-String, 14-String, 15, 16

[core_garage_insert]
SQL1_1 = INSERT INTO core_garage (profile_id, faction_id, vehicle_id, vin, plate, color, material, rims, windows, lights) VALUES (?,?,(SELECT id FROM core_vehicles WHERE class_name=?),?,?,?,?,?,?,?);
SQL1_INPUTS = 1-Null, 2-Null, 3, 4, 5, 6, 7, 8, 9, 10
